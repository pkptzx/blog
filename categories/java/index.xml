<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>java on 码魂</title>
    <link>http://blog.lazy.icu/categories/java/</link>
    <description>Recent content in java on 码魂</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-Hans</language>
    <lastBuildDate>Wed, 04 Aug 2021 19:14:18 +0800</lastBuildDate><atom:link href="http://blog.lazy.icu/categories/java/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>获取7z压缩文件压缩前文件大小</title>
      <link>http://blog.lazy.icu/2021/08/04/java-7z-unpack-size/</link>
      <pubDate>Wed, 04 Aug 2021 19:14:18 +0800</pubDate>
      
      <guid>http://blog.lazy.icu/2021/08/04/java-7z-unpack-size/</guid>
      <description>在解压前获取文件解压大小,主要为了不解压获取解压后的文件大小,计算解压后的磁盘占用量 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;net.sf.sevenzipjbinding&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;sevenzipjbinding&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;16.02-2.01&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;net.sf.sevenzipjbinding&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;sevenzipjbinding-all-platforms&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;16.02-2.01&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.tukaani&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;xz&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;1.9&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.apache.commons&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;commons-compress&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;1.21&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;cn.hutool&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;hutool-all&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;5.6.3&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48</description>
    </item>
    
    <item>
      <title>使用java将SVG图片格式转PNG图片格式</title>
      <link>http://blog.lazy.icu/2021/03/19/svg-convert-png/</link>
      <pubDate>Fri, 19 Mar 2021 15:29:12 +0800</pubDate>
      
      <guid>http://blog.lazy.icu/2021/03/19/svg-convert-png/</guid>
      <description>1 2 3 4 5 6 7 8 9 10 11 &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.apache.xmlgraphics&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;xmlgraphics-commons&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;2.6&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.apache.xmlgraphics&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;batik-all&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;1.14&amp;lt;/version&amp;gt; &amp;lt;type&amp;gt;pom&amp;lt;/type&amp;gt; &amp;lt;/dependency&amp;gt; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 import java.io.ByteArrayInputStream; import java.io.File; import java.io.FileOutputStream; import java.io.FilenameFilter; import java.io.OutputStream; import org.apache.batik.transcoder.TranscoderInput; import org.apache.batik.transcoder.TranscoderOutput; import org.apache.batik.transcoder.image.PNGTranscoder; import org.apache.commons.io.FileUtils; public class SVG2PNG { /** * 将指定目录中的svg文件转换成png格式 * * @param args * @throws Exception */ public static void main(String[] args) throws Exception {</description>
    </item>
    
    <item>
      <title>Java8新的时间和日期API</title>
      <link>http://blog.lazy.icu/2019/08/13/java8newdate/</link>
      <pubDate>Tue, 13 Aug 2019 20:09:58 +0800</pubDate>
      
      <guid>http://blog.lazy.icu/2019/08/13/java8newdate/</guid>
      <description>Java 8的日期和时间类包含 LocalDate、LocalTime、Instant、Duration 以及 Period，这些类都包含在 java.time 包中，Java 8 新的时间API的使用方式，包括创建、格式化、解析、计算、修改，下面我们看下如何去使用。 LocalDate 只会获取年月日 1 2 3 4 5 6 7 8 9 10 11 12 13 14 // 创建</description>
    </item>
    
    <item>
      <title>java校验maven下载的jar文件</title>
      <link>http://blog.lazy.icu/2019/05/23/java-check-maven-jar/</link>
      <pubDate>Thu, 23 May 2019 15:58:08 +0800</pubDate>
      
      <guid>http://blog.lazy.icu/2019/05/23/java-check-maven-jar/</guid>
      <description>有时候maven真的很坑! 有时候提示invalid LOC header (bad signat signature), 但又有时候什么都不提示,工程报错,情况有肯多中,不知道大家遇到过几种诡异的. 很多人说加-U参数或在maven插件选择强制刷新等操作,但很不好使,一点用都没有. 今天我就遇到POM提示第一行错误,这怎么可能?其他任何地方都不</description>
    </item>
    
  </channel>
</rss>
