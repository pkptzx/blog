<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>python on 码魂</title>
    <link>http://blog.lazy.icu/categories/python/</link>
    <description>Recent content in python on 码魂</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-Hans</language>
    <lastBuildDate>Wed, 03 Aug 2022 05:18:58 +0800</lastBuildDate><atom:link href="http://blog.lazy.icu/categories/python/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Python解密Chrome的Cookies文件</title>
      <link>http://blog.lazy.icu/2022/08/03/chrome-cookies-crack/</link>
      <pubDate>Wed, 03 Aug 2022 05:18:58 +0800</pubDate>
      
      <guid>http://blog.lazy.icu/2022/08/03/chrome-cookies-crack/</guid>
      <description>桌面程序或爬虫有时候很需要免登陆获取cookies,想着应用怎么能直接读取到cookie文件,查了后发现Chrome的Cookies文件是加密的. 按照网上找了半天Cookies的路径都不对,新版本位置也变了,Cookies是在Network下. 原理是直接读取chrome保存Coo</description>
    </item>
    
    <item>
      <title>rust和python交互pyo3(一)</title>
      <link>http://blog.lazy.icu/2022/03/12/rust-pyo3-learn-1/</link>
      <pubDate>Sat, 12 Mar 2022 06:05:48 +0800</pubDate>
      
      <guid>http://blog.lazy.icu/2022/03/12/rust-pyo3-learn-1/</guid>
      <description>rust和python交互pyo3(1) pyo3 需要python3.7以上的版本 1 2 3 4 5 6 7 pip install maturin # 新建文件夹后:初始化 maturin init --bindings pyo3 # 开发编译安装,就可以测试用python调用了 maturin develop # release版本编译,只会编译,不会更新安装到python环境 maturin build --release 生成的pyproject.toml</description>
    </item>
    
    <item>
      <title>python验证码在线识别</title>
      <link>http://blog.lazy.icu/2022/03/10/python-captcha-discriminate-online-api/</link>
      <pubDate>Thu, 10 Mar 2022 00:15:47 +0800</pubDate>
      
      <guid>http://blog.lazy.icu/2022/03/10/python-captcha-discriminate-online-api/</guid>
      <description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 import requests import base64 import json from IPython.core.display import Image # appKey ：2e35010c-a759-11eb-8dd8-7429af540200 # appSecret：632b36755e7963fbdb61b2529e410bc4 # http://api.yunshuck.com/api/captcha/simple-captcha # type:603 数字加字母组合验</description>
    </item>
    
    <item>
      <title>Jupyter Notebook使用Anaconda虚拟环境</title>
      <link>http://blog.lazy.icu/2021/08/04/jupyternotebook-use-anaconda-env/</link>
      <pubDate>Wed, 04 Aug 2021 20:41:06 +0800</pubDate>
      
      <guid>http://blog.lazy.icu/2021/08/04/jupyternotebook-use-anaconda-env/</guid>
      <description>Jupyter Notebook使用Anaconda虚拟环境 第一步：安装ipykernel： 法一： 1.进入虚拟环境 Windows：在Anaconda Prompt, 运行 activate myenv macOS &amp;amp; Linux, 在Terminal, 运行 source activate myenv 安装ipykernel：conda install ipykernel 法二： 在任何环境下都可以直接运行conda install -n myenv ipykern</description>
    </item>
    
    <item>
      <title>Anaconda &amp; conda 配置镜像</title>
      <link>http://blog.lazy.icu/2021/08/04/anaconda-conda-install-mirrors/</link>
      <pubDate>Wed, 04 Aug 2021 20:05:48 +0800</pubDate>
      
      <guid>http://blog.lazy.icu/2021/08/04/anaconda-conda-install-mirrors/</guid>
      <description>Anaconda &amp;amp; conda 配置镜像 Anaconda 安装包可以到 https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/ 下载。 各系统都可以通过修改用户目录下的 .condarc 文件。Windows 用户无法直接创建名为 .condarc 的文件，可先执行 conda config --set show_channel_urls yes 生成该文件之后再修改。 channels: - defaults show_channel_urls: true default_channels: - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/r - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/msys2 custom_channels: conda-forge: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud msys2: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud bioconda: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud menpo: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud pytorch: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud simpleitk: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud 即可添加 Anaconda Python 免费仓库。 运行 conda clean -i 清除索引缓存，保证用的是镜像站提供的索</description>
    </item>
    
  </channel>
</rss>
